#!/usr/bin/env bash

set -o errexit -o nounset -o pipefail -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit


SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
readonly SCRIPT_DIR
readonly DOTFILES_DIR=$SCRIPT_DIR
readonly ENV_DIR=$DOTFILES_DIR/envs

# one.bash:usage
if [[ $# == 0 ]] || [[ ${1:-} == -h ]] || [[ ${1:-} == --help ]]; then
  cat <<EOF
Usage: $(basename "$0") <env>
Desc: Initialize all configs, plugins and bash.
Env:
EOF
  find ./envs -mindepth 1 -maxdepth 1 -type d -not -name ".*" -not -name "_*" -exec basename {} \; | sort | sed 's/^/    /'
  exit 0
fi

# shellcheck source=scripts/install-funcs.bash
. "$DOTFILES_DIR"/scripts/install-funcs.bash

# shellcheck source=./scripts/colors.bash
. "$DOTFILES_DIR"/scripts/colors.bash

# shellcheck source=./scripts/lobash.bash
. "$DOTFILES_DIR"/scripts/lobash.bash

check() {
  check_bash
  check_cmd gawk
  check_cmd perl
  check_cmd git
  check_cmd python3
}

set_proxy () {
  [[ -z ${PROXY:-} ]] && return

  local http_proxy="http://$PROXY";
  local https_proxy="http://$PROXY";
  local socket_proxy="socks5://$PROXY";

  export http_proxy="$http_proxy"
  export HTTP_PROXY="$http_proxy"
  export https_proxy="$https_proxy"
  export HTTPS_PROXY="$https_proxy"
  export ALL_PROXY="$socket_proxy"
}

init_one_bash() {
  echo "[TODO] init one.bash"

  ln -fs "$DOTFILES_DIR/others/one.bash/bin/one" "$HOME/bin/one"
  export PATH="$PATH:$HOME/bin"
  one dep install

  local ONE_BASH_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/one.bash
  mkdir -p "$ONE_BASH_DIR"
  local ONE_CONF=$ONE_BASH_DIR/one.config.bash
  local one_conf_path
  one_conf_path=$(realpath "$env"/one.config.bash)
  ln -fs "$one_conf_path" "$ONE_CONF"
  bash -c ". '$ONE_CONF' && PATH=$PATH one link"

  echo "[DONE] init one.bash"
}

main() {
  local env=$ENV_DIR/$1

  set_proxy
  check

  GITHUB_CLONE=git github_clone "adoyle-h/dotfiles-envs" "$ENV_DIR"

  if [[ ! -d "$env" ]]; then
    echo "Not found directory: $env" >&2
    return 4
  fi

  # shellcheck disable=1091
  . "$env"/config.bash

  github_clone "one-bash/one.bash" "$DOTFILES_DIR/others/one.bash"
  github_clone "adoyle-h/neovim-config" "$DOTFILES_DIR/others/nvim"
  github_clone "adoyle-h/my-command-cheat" "$DOTFILES_DIR/others/cheatsheets-adoyle"
  github_clone "adoyle-h/tmux-choose-pane" "$DOTFILES_DIR/others/tmux-choose-pane"
  github_clone "adoyle-h/forgit" "$DOTFILES_DIR/others/forgit"

  [[ ! -d $DOWNLOAD_BIN_DIR ]] && mkdir -p "$DOWNLOAD_BIN_DIR"
  download_bins

  init_one_bash

  ONE_DIR=$HOME/dotfiles/others/one.bash
  . "$ONE_DIR/bash/entry.bash"

  type after_install &>/dev/null && after_install

  echo "Please restart your shell to take effect."
}

main "$@"
