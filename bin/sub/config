#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

# Provide sub completions
if [ "${1:-}" = "--complete" ]; then
  if [[ $COMP_CWORD -lt 3 ]]; then
    echo "--help"
  fi

  exit 0
fi

readonly flag=${1:-}

case "$flag" in
  -h|--help|'')
    cat <<EOF
USAGE:
  a config [--help]        Show help
  a config <key>           Get value
  a config <key>=<value>   Set value
EOF
    exit 0
    ;;
esac


_l.0_3_1_1176955_24859_split() {
  local -i i

  local dLen=${#delimiter}
  local sLen=${#string}

  if [[ $delimiter == '' ]]; then
    for (( i=0; i < sLen; i++ )); do
      printf '%s\n' "${string:$i:1}"
    done
    return 0
  fi

  local -a indexes=()
  local -i a=0 b=0 d

  while (( a < "$sLen" )); do
    for (( b=a+1; b <= sLen; b++ )); do
      d=$(( b - a )) || true
      if (( d > dLen )); then
        break;
      fi

      if [[ "${string:$a:$d}" == "$delimiter" ]]; then
        indexes+=("$a")
      fi
    done
    (( a++ )) || true
  done

  a=0
  if (( ${#indexes[@]} > 0 )); then
    for i in "${indexes[@]}"; do
      printf '%s\n' "${string:$a:$(( i - a ))}"
      a=$((i + dLen));
    done
  fi

  if (( a < sLen )); then
    printf '%s\n' "${string:$a}"
  elif (( a == sLen )); then
    printf '\n'
  fi
}

l.split() {
  local string=$1
  local output=$2
  local delimiter
  if [[ $# == 2 ]]; then
    delimiter=' '
  else
    delimiter="${3}"
  fi

  IFS=$'\n' readarray -t "$output" < <(_l.0_3_1_1176955_24859_split)
}

declare -a list
l.split "$1" list '='

readonly SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
readonly CONF_FILE=$SCRIPT_DIR/../../runtime/bash_config.bash

if [[ ${#list[@]} == 1 ]]; then
  grep -E "^DOTFILES_${list[0]}" "$CONF_FILE"
else
  sed -i'' -E "s/^DOTFILES_${list[0]}=.+/DOTFILES_${list[0]}=${list[1]}/" "$CONF_FILE"
fi
